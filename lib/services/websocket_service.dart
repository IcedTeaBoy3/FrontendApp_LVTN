import 'package:socket_io_client/socket_io_client.dart' as IO;
import 'package:frontend_app/configs/api_config.dart';

class WebSocketService {
  // üîí Singleton instance
  static final WebSocketService _instance = WebSocketService._internal();
  factory WebSocketService() => _instance;
  WebSocketService._internal();

  IO.Socket? socket;
  String? _accountId;
  String? _role;

  bool get isConnected => socket?.connected ?? false;

  /// K·∫øt n·ªëi socket v√† tham gia v√†o ph√≤ng t∆∞∆°ng ·ª©ng (user/admin/doctor)
  void connect({required String accountId, required String role}) {
    if (isConnected && _accountId == accountId && _role == role) {
      print('‚ö° Socket already connected for $role:$accountId');
      return;
    }

    _accountId = accountId;
    _role = role;

    socket = IO.io(
      ApiConfig.backendUrl,
      IO.OptionBuilder()
          .setTransports(['websocket'])
          .enableAutoConnect()
          .build(),
    );

    socket!.connect();

    // Khi k·∫øt n·ªëi th√†nh c√¥ng
    socket!.onConnect((_) {
      print('‚úÖ Connected to WebSocket server');
      // G·ª≠i y√™u c·∫ßu join ph√≤ng
      socket!.emit('join_room', {
        'role': role,
        'accountId': accountId,
      });
      print('üìå Joined rooms: $role, $accountId');
    });

    // Khi m·∫•t k·∫øt n·ªëi
    socket!.onDisconnect((_) {
      print('‚ùå Disconnected from WebSocket server');
    });

    // Khi k·∫øt n·ªëi l·ªói
    socket!.onConnectError((err) {
      print('‚ö†Ô∏è WebSocket connect error: $err');
    });

    // Khi m·∫•t k·∫øt n·ªëi do timeout
    socket!.onError((err) {
      print('‚ö†Ô∏è WebSocket error: $err');
    });
  }

  /// ƒêƒÉng k√Ω s·ª± ki·ªán
  void on(String event, Function(dynamic) handler) {
    socket?.on(event, handler);
  }

  /// G·ª≠i d·ªØ li·ªáu l√™n server
  void emit(String event, dynamic data) {
    socket?.emit(event, data);
  }

  /// Ng·∫Øt k·∫øt n·ªëi
  void disconnect() {
    socket?.disconnect();
    socket = null;
    _accountId = null;
    _role = null;
    print('üîå Socket disconnected');
  }
}
